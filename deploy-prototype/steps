# manual end to end build steps

make build
make generate

IMAGE=maistradev.azurecr.io/istio-operator:$(git rev-parse HEAD) make image

docker push maistradev.azurecr.io/istio-operator:$(git rev-parse HEAD)

# patch olm manifest with mirrored image location (using mirror script):

eg:
        olm.relatedImage.v2_2.cni: maistradev.azurecr.io/istio/install-cni:611dad93ddeae2e20b423e35fc2dedad1e4adc03
        olm.relatedImage.v2_2.pilot: maistradev.azurecr.io/istio/pilot:611dad93ddeae2e20b423e35fc2dedad1e4adc03
        olm.relatedImage.v2_2.proxyv2: maistradev.azurecr.io/istio/proxyv2:611dad93ddeae2e20b423e35fc2dedad1e4adc03
        olm.relatedImage.v2_2.wasm-cacher: maistradev.azurecr.io/istio/pilot:611dad93ddeae2e20b423e35fc2dedad1e4adc03

and image section with above image
in deploy/servicemesh-operator.yaml

apply the deploy/servicemesh-operator.yaml

helm install \    
  cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --version v1.6.1 \
   --set installCRDs=true

kubectl create ns istio-system

kubectl apply -f selfsigned-ca.yaml -n istio-system
helm install -n cert-manager cert-manager-istio-csr jetstack/cert-manager-istio-csr -f deploy-prototype/istio-csr-helm-values.yaml"

# apply smcp.yaml
kubectl apply -f deploy-prototype/smcp.yaml

# for some reason the deploy currently generates some junk env vars:
INJECTION_WEBHOOK_CONFIG_NAME edit pilot deploy and delete those until this is fixed

# the smcp should proceed and istio-csr should be configured properly!

# can verify by seeing all mounts are correct on pilot, launching bookinfo and checking
# istioctl pc s pod-name to see our self-signed ca is the issuer.
# it's also important to verify that we used the right root configmap for the root of trust.
