{{ if and (eq .Values.tracing.provider "jaeger") (eq .Values.tracing.jaeger.template "production-elasticsearch") .Values.tracing.jaeger.install }}
apiVersion: jaegertracing.io/v1
kind: "Jaeger"
metadata:
  name: {{ .Values.tracing.jaeger.resourceName | default "jaeger"}}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.tracing.provider }}
    release: {{ .Release.Name }}
spec:
  strategy: production

  query:
    {{- if and .Values.tracing.jaeger.hub .Values.tracing.jaeger.tag .Values.tracing.jaeger.queryImage }}
    image: {{ .Values.tracing.jaeger.hub }}/{{ .Values.tracing.jaeger.queryImage }}:{{ .Values.tracing.jaeger.tag }}
    {{- end }}
    options:
      query:
        base-path: /

{{- if and .Values.tracing.jaeger.hub .Values.tracing.jaeger.tag .Values.tracing.jaeger.collectorImage }}
  collector:
    image: {{ .Values.tracing.jaeger.hub }}/{{ .Values.tracing.jaeger.collectorImage }}:{{ .Values.tracing.jaeger.tag }}
{{- end }}

{{- if and .Values.tracing.jaeger.hub .Values.tracing.jaeger.tag .Values.tracing.jaeger.agentImage }}
  agent:
    image: {{ .Values.tracing.jaeger.hub }}/{{ .Values.tracing.jaeger.agentImage }}:{{ .Values.tracing.jaeger.tag }}
{{- end }}

{{- if .Values.tracing.jaeger.annotations }}
  annotations:
    {{- range $key, $value := .Values.tracing.jaeger.annotations }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
{{- end }}

  storage:
    type: elasticsearch
    elasticsearch:
{{- if .Values.tracing.jaeger.elasticsearch.image }}
      image: {{ toYaml .Values.tracing.jaeger.elasticsearch.image }}
{{- end }}
{{- if .Values.tracing.jaeger.elasticsearch.nodeCount }}
      nodeCount: {{ toYaml .Values.tracing.jaeger.elasticsearch.nodeCount }}
{{- else }}
      nodeCount: 3
{{- end }}
{{- if .Values.tracing.jaeger.elasticsearch.storage }}
      storage:
{{ toYaml .Values.tracing.jaeger.elasticsearch.storage | indent 8 }}
{{- end }}
{{- if .Values.tracing.jaeger.elasticsearch.redundancyPolicy }}
      redundancyPolicy: {{ toYaml .Values.tracing.jaeger.elasticsearch.redundancyPolicy }}
{{- end }}
{{- if .Values.tracing.jaeger.elasticsearch.nodeSelector }}
      nodeSelector:
        {{- range $key, $value := .Values.tracing.jaeger.elasticsearch.nodeSelector }}
          {{ $key }}: {{ $value | quote }}
        {{- end }}
{{- end }}
      resources:
{{- if .Values.tracing.jaeger.elasticsearch.resources }}
{{ toYaml .Values.tracing.jaeger.elasticsearch.resources | indent 8 }}
{{- else }}
        requests:
          memory: "16Gi"
          cpu: "1"
{{- end }}

{{- if .Values.tracing.jaeger.esIndexCleaner }}
    esIndexCleaner:
{{ toYaml .Values.tracing.jaeger.esIndexCleaner | indent 6 }}
{{- end }}

  ingress:
    enabled: {{ .Values.tracing.ingress.enabled }}
    # XXX: should this be parameterized?
    security: oauth-proxy
{{- if .Values.tracing.ingress.annotations }}
    annotations:
      {{- range $key, $value := .Values.tracing.ingress.annotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
{{- end }}
    openshift:
      sar: '{"namespace": "{{ .Release.Namespace }}", "resource": "pods", "verb": "get"}'
      htpasswdFile: /etc/proxy/htpasswd/auth

  volumeMounts:
  - name: secret-htpasswd
    mountPath: /etc/proxy/htpasswd
  - name: trusted-ca-bundle
    mountPath: /etc/pki/ca-trust/extracted/pem/
    readOnly: true
  volumes:
  - name: secret-htpasswd
    secret:
      secretName: htpasswd
  - name: trusted-ca-bundle
    configMap:
      defaultMode: 420
      items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
      name: trusted-ca-bundle
      optional: true
  resources:
{{- if .Values.tracing.jaeger.resources }}
{{ toYaml .Values.tracing.jaeger.resources | indent 4 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 4 }}
{{- end }}
  affinity:
  {{- include "nodeaffinity" . | indent 2 }}

{{ end }}
