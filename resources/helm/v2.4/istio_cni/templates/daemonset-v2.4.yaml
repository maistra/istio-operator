{{- if and .Values.cni.enabled (has "v2.4" .Values.cni.supportedReleases) (eq .Values.cni.instanceVersion "v2.4") }}
# This manifest installs the Istio install-cni container, as well
# as the Istio CNI plugin and config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: istio-cni-node-v2-4
  namespace: {{ .Release.Namespace }}
  labels:
    maistra-version: "2.4.2"
    k8s-app: istio-cni-node-v2-4
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      k8s-app: istio-cni-node-v2-4
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: istio-cni-node-v2-4
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
        # Custom annotations
        {{- if .Values.cni.podAnnotations }}
{{ toYaml .Values.cni.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        # Make sure istio-cni-node gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      priorityClassName: system-node-critical
      serviceAccountName: {{ .Values.cni.defaultResourceName }}
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 5
{{- if .Values.cni.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.cni.imagePullSecrets }}
      - name: {{ . }}
{{- end }}
{{- end }}
      containers:
        # This container installs the Istio CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: "{{ .Values.cni.image_v2_4 }}"
          imagePullPolicy: {{ .Values.cni.imagePullPolicy }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
          initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8000
          command: ["install-cni"]
          securityContext:
            privileged: true
          env:
{{- if .Values.cni.cniConfFileName_v2_4 }}
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "{{ .Values.cni.cniConfFileName_v2_4 }}"
{{- end }}
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.cni.defaultResourceName }}-config-v2-4
                  key: "{{ default "cni_network_config" .Values.cni.configMap_v2_4 }}"
            - name: CNI_NET_DIR
              value: {{ default "/etc/cni/net.d" .Values.cni.cniConfDir }}
            # Deploy as a standalone CNI plugin or as chained?
            - name: CHAINED_CNI_PLUGIN
              value: "{{ .Values.cni.chained }}"
            # Directory in which the CNI config file should be created (host path mounted in the container)
            - name: MOUNTED_CNI_NET_DIR
              value: {{ default "/host/etc/cni/net.d" .Values.cni.mountedCniConfDir }}
            # Name of the kubeconfig file used by CNI agent
            - name: KUBECFG_FILE_NAME
              value: "v2-4-istio-cni.kubeconfig"
            # The prefix to add when installing the CNI binaries to the node
            - name: CNI_BINARIES_PREFIX
              value: "v2-4-"
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/
              name: etc-cni-dir
            - mountPath: /var/run/istio-cni
              name: cni-log-dir
          resources:
{{- if .Values.cni.resources }}
{{ toYaml .Values.cni.resources | indent 12 }}
{{- else }}
            requests:
              cpu: 10m
              memory: 100Mi
{{- end }}
      volumes:
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: {{ default "/opt/cni/bin" .Values.cni.cniBinDir }}
        - name: etc-cni-dir
          hostPath:
            path: /etc/cni
        # Used for UDS log
        - name: cni-log-dir
          hostPath:
            path: /var/run/istio-cni
{{- end }}
