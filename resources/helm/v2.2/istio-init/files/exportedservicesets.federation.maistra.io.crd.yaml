apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    maistra-version: "2.2.0"
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: exportedservicesets.federation.maistra.io
spec:
  group: federation.maistra.io
  names:
    kind: ExportedServiceSet
    listKind: ExportedServiceSetList
    plural: exportedservicesets
    singular: exportedserviceset
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ExportedServiceSet is the Schema for configuring exported services.
          It must be created in the same namespace as the control plane. The name
          of the ExportedServiceSet resource must match the name of a ServiceMeshPeer
          resource defining the remote mesh to which the services will be exported.
          This implies there will be at most one ExportedServiceSet resource per peer
          and control plane.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines rules for matching services to be exported.
            properties:
              exportRules:
                description: ExportRules are the rules that determine which services
                  are exported from the mesh.  The list is processed in order and
                  the first spec in the list that applies to a service is the one
                  that will be applied.  This allows more specific selectors to be
                  placed before more general selectors.
                items:
                  properties:
                    labelSelector:
                      description: LabelSelector provides a mechanism for selecting
                        services to export by using a label selector to match Service
                        resources for export.
                      properties:
                        aliases:
                          description: 'Aliases is a map of aliases to apply to exported
                            services.  If a name is not found in the map, the original
                            service name is exported.  A ''*'' will match any name.
                            The Aliases list will be processed in order, with the
                            first match found being applied to the exported service.
                            Examples: */foo->*/bar will match foo service in any namesapce,
                            exporting it as bar from its original namespace. */foo->bar/bar
                            will match foo service in any namespace, exporting it
                            as bar/bar. foo/*->bar/* will match any service in foo
                            namespace, exporting it from the bar namespace with its
                            original name */*->bar/* will match any service and export
                            it from the bar namespace with its original name. */*->*/*
                            is the same as not specifying anything'
                          items:
                            properties:
                              alias:
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                          type: array
                        namespace:
                          description: Namespace specifies to which namespace the
                            selector applies.  An empty value applies to all namespaces
                            in the mesh.
                          type: string
                        selector:
                          description: Selector used to select Service resources in
                            the namespace/mesh.  An empty selector selects all services.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                      type: object
                    nameSelector:
                      description: NameSelector provides a simple name matcher for
                        exporting services in the mesh.
                      properties:
                        alias:
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          type: object
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                    type:
                      description: Type of rule.  One of NameSelector or LabelSelector.
                      type: string
                  required:
                  - type
                  type: object
                type: array
            type: object
          status:
            properties:
              exportedServices:
                description: Exports provides details about the services exported
                  by this mesh.
                items:
                  description: PeerServiceMapping represents the name mapping between
                    an exported service and its local counterpart.
                  properties:
                    exportedName:
                      description: ExportedName represents the fully qualified domain
                        name (FQDN) of an exported service.  For an exporting mesh,
                        this is the name that is exported to the remote mesh. For
                        an importing mesh, this would be the name of the service exported
                        by the remote mesh.
                      type: string
                    localService:
                      description: LocalService represents the service in the local
                        (i.e. this) mesh. For an exporting mesh, this would be the
                        service being exported. For an importing mesh, this would
                        be the imported service.
                      properties:
                        hostname:
                          description: Hostname represents fully qualified domain
                            name (FQDN) used to access the service.
                          type: string
                        name:
                          description: Name represents the simple name of the service,
                            e.g. the metadata.name field of a kubernetes Service.
                          type: string
                        namespace:
                          description: Namespace represents the namespace within which
                            the service resides.
                          type: string
                      required:
                      - hostname
                      - name
                      - namespace
                      type: object
                  required:
                  - exportedName
                  - localService
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - exportedName
                x-kubernetes-list-type: map
            required:
            - exportedServices
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []