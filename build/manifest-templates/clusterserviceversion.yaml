apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: __NAME__.v__NAME_VERSION__
  namespace: placeholder
  annotations:
    categories: "OpenShift Optional, Integration & Delivery"
    capabilities: "Seamless Upgrades"
    certified: "false"
    repository: https://github.com/maistra/istio-operator
    description: |-
      __CSV_DESCRIPTION__

    containerImage: __IMAGE_SRC__
    createdAt: __DATE__
    support: Red Hat, Inc. 
    olm.skipRange: ">=1.0.2 <__STRIPPED_VERSION__"
    operators.openshift.io/infrastructure-features: '__OLM_FEATURES__'
    __OLM_SUBSCRIPTION_ANNOTATION__
    alm-examples: |-
      [
        {
          "apiVersion": "maistra.io/v1",
          "kind": "ServiceMeshControlPlane",
          "metadata": {
            "name": "basic-install",
            "namespace": "control-plane-namespace"
          },
          "spec": {
            "version": "v1.1",
            "istio": {
              "gateways": {
                "istio-egressgateway": {
                  "autoscaleEnabled": false
                },
                "istio-ingressgateway": {
                  "autoscaleEnabled": false,
                  "ior_enabled": false
                }
              },
              "mixer": {
                "policy": {
                  "autoscaleEnabled": false
                },
                "telemetry": {
                  "autoscaleEnabled": false
                }
              },
              "pilot": {
                "autoscaleEnabled": false,
                "traceSampling": 100.0
              },
              "kiali": {
                "enabled": true
              },
              "grafana": {
                "enabled": true
              },
              "tracing": {
                "enabled": true,
                "jaeger": {
                  "template": "__JAEGER_TEMPLATE__"
                }
              }
            }
          }
        },
        {
          "apiVersion": "maistra.io/v1",
          "kind": "ServiceMeshMemberRoll",
          "metadata": {
            "name": "default",
            "namespace": "control-plane-namespace"
          },
          "spec": {
            "members": [
              "your-project",
              "another-of-your-projects" 
            ]
          }
        },
        {
          "apiVersion": "maistra.io/v1",
          "kind": "ServiceMeshMember",
          "metadata": {
            "name": "default",
            "namespace": "application-namespace"
          },
          "spec": {
            "controlPlaneRef": {
              "name": "basic-install",
              "namespace": "control-plane-namespace"
            }
          }
        }
      ]
spec:
  version: __VERSION__
  maturity: alpha
  displayName: __DISPLAY_NAME__
  description: |-
    __APP_DESCRIPTION__

    ### Overview

    __DISPLAY_NAME__, based on the open source [Istio](https://istio.io/) project, adds a transparent layer on existing
    distributed applications without requiring any changes to the service code. You add __DISPLAY_NAME__
    support to services by deploying a special sidecar proxy throughout your environment that intercepts all network
    communication between microservices. You configure and manage the service mesh using the control plane features.

    __DISPLAY_NAME__ provides an easy way to create a network of deployed services that provides discovery,
    load balancing, service-to-service authentication, failure recovery, metrics, and monitoring. A service mesh also
    provides more complex operational functionality, including A/B testing, canary releases, rate limiting, access
    control, and end-to-end authentication.

    ### Core Capabilities

    __DISPLAY_NAME__ supports uniform application of a number of key capabilities across a network of services:

    + **Traffic Management** - Control the flow of traffic and API calls between services, make calls more reliable,
      and make the network more robust in the face of adverse conditions.

    + **Service Identity and Security** - Provide services in the mesh with a verifiable identity and provide the
      ability to protect service traffic as it flows over networks of varying degrees of trustworthiness.

    + **Policy Enforcement** - Apply organizational policy to the interaction between services, ensure access policies
      are enforced and resources are fairly distributed among consumers. Policy changes are made by configuring the
      mesh, not by changing application code.

    + **Telemetry** - Gain understanding of the dependencies between services and the nature and flow of traffic between
      them, providing the ability to quickly identify issues.

    ### Joining Projects Into a Mesh

    Once an instance of __DISPLAY_NAME__ has been installed, it will only exercise control over services within its own
    project.  Other projects may be added into the mesh using one of two methods:

    1. A **ServiceMeshMember** resource may be created in other projects to add those projects into the mesh.  The
      **ServiceMeshMember** specifies a reference to the **ServiceMeshControlPlane** object that was used to install
      the control plane.  The user creating the **ServiceMeshMember** resource must have permission to *use* the
      **ServiceMeshControlPlane** object.  The adminstrator for the project containing the control plane can grant
      individual users or groups the *use* permissions.
    
    2. A **ServiceMeshMemberRoll** resource may be created in the project containing the control plane.  This resource
      contains a single *members* list of all the projects that should belong in the mesh.  The resource must be named
      *default*.  The user creating the resource must have *edit* or *admin* permissions for all projects in the
      *members* list.

    ### More Information

    * [Documentation](__DOCUMENTATION_URL__)
    * [Bugs](__BUG_URL__)

  icon:
  - mediatype: image/png
    base64data: |-__ICON__

  keywords: [ 'istio', 'maistra', 'servicemesh' ]
  maintainers:
  - name: Red Hat, OpenShift Service Mesh
    email: istio-feedback@redhat.com
  provider:
    name: Red Hat, Inc.
  links:
  - name: __DISPLAY_NAME__
    url: __DOCUMENTATION_URL__
  - name: Istio
    url: https://istio.io/
  - name: Operator Source Code
    url: https://github.com/Maistra/istio-operator
  - name: Bugs
    url: __BUG_URL__
__REPLACES_CSV__
  installModes:
  - type: OwnNamespace
    supported: false
  - type: SingleNamespace
    supported: false
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true
  relatedImages:
__RELATED_IMAGES__
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - serviceAccountName: istio-operator
        rules:
__CLUSTER_ROLE_RULES__
      deployments:
      - name: istio-operator
        spec:
__DEPLOYMENT_SPEC__
  customresourcedefinitions:
    owned:
    - name: servicemeshcontrolplanes.maistra.io
      version: v1
      kind: ServiceMeshControlPlane
      displayName: Istio Service Mesh Control Plane
      description: An Istio control plane installation
      specDescriptors:
      - description: Specify the version of control control plane you want to install
        displayName: Control Plane Version
        path: version
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:General'
          - 'urn:alm:descriptor:com.tectonic.ui:select:v1.1'
          - 'urn:alm:descriptor:com.tectonic.ui:select:v1.0'
      - description: Enable mTLS for communication between control plane components (galley, pilot, etc.)
        displayName: Control Plane Security
        path: istio.global.controlPlaneSecurityEnabled
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:General'
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - description: Enable mTLS for communcation between services in the mesh
        displayName: Data Plane Security
        path: istio.global.mtls.enabled
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:General'
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - description: Set to true to install Kiali
        displayName: Install Kiali
        path: istio.kiali.enabled
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:visualization'
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - description: Set to true to install Grafana
        displayName: Install Grafana
        path: istio.grafana.enabled
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:visualization'
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - description: Set to false to disable tracing
        displayName: Install Jaeger
        path: istio.tracing.enabled
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:tracing'
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
      - description: Set template to use when installing Jaeger
        displayName: Jaeger template
        path: istio.tracing.jaeger.template
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:tracing'
          - 'urn:alm:descriptor:com.tectonic.ui:fieldDependency:istio.tracing.enabled:true'
          - 'urn:alm:descriptor:com.tectonic.ui:select:all-in-one'
          - 'urn:alm:descriptor:com.tectonic.ui:select:production-elasticsearch'
      - description: Set to true to install the Istio 3Scale adapter
        displayName: Install 3Scale Adapter
        path: threeScale.enabled
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:API_Management'
          - 'urn:alm:descriptor:com.tectonic.ui:booleanSwitch'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
      - description: Limits describes the minimum/maximum amount of compute resources required/allowed
        displayName: Default Resource Requirements
        path: istio.global.defaultResources
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:Resource_Requirements'
          - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
          - 'urn:alm:descriptor:com.tectonic.ui:advanced'
    - name: servicemeshmembers.maistra.io
      version: v1
      kind: ServiceMeshMember
      displayName: Istio Service Mesh Member
      description: Marks the containing namespace as a member of the referenced Service Mesh
      specDescriptors:
      - path: controlPlaneRef.namespace
        description: The namespace of the ServiceMeshControlPlane to which this namespace belongs
        displayName: Namespace
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:Service_Mesh_Control_Plane'
          - 'urn:alm:descriptor:io.kubernetes:Namespace'
      - path: controlPlaneRef.name
        description: The name of the ServiceMeshControlPlane to which this namespace belongs
        displayName: Name
        x-descriptors:
          - 'urn:alm:descriptor:com.tectonic.ui:fieldGroup:Service_Mesh_Control_Plane'
          - 'urn:alm:descriptor:com.tectonic.ui:text'
    - name: servicemeshmemberrolls.maistra.io
      version: v1
      kind: ServiceMeshMemberRoll
      displayName: Istio Service Mesh Member Roll
      description: A list of namespaces in Service Mesh
